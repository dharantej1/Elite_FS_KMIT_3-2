Consider a pair of integers, (a,b). The following operations can be performed 
on (a,b) in any order, zero or more times:
	- (a,b) -> ( a+b, b )
	- (a,b) -> ( a, a+b )

For example, starting with (1,1), perform the operation (1, 1+1) to get (1,2), 
perform the operation (1+2, 2) to get (3,2), and perform the operation (5,2). 
Alternatively the first operation could be (1+1, 1) to get (2,1) and so on.

Your task is to build a function must return a string that denotes whether you 
can convert (a,b) to (c,d) by performing zero or more operations specified 
above? or not. 

If it is possible, return true, otherwise false.

NOTE: 
1<= a,b,c,d <= 1000

Input Format:
-------------
Line-1: Two space separated integers, a,b
Line-2: Two space separated integers, c,d

Output Format:
--------------
Return a boolean value.


Sample Input-1:
---------------
1 2
5 4

Sample Output-1:
----------------
true


Sample Input-2:
---------------
2 3
10 7

Sample Output-2:
----------------
false



def reachPoint(a,b,c,d):
    if a>c or b>d:
        return False
    if a==c:
        return (d-b)%a==0
    if b==d:
        return (c-a)%b==0
    return reachPoint(a,b,c-d,d) or reachPoint(a,b,c,d-c)
a,b=map(int,input().split())
c,d=map(int,input().split())
print(reachPoint(a,b,c,d))