There are n boxes of balls in a row, every i-th box contains balls[i] balls.

A series of boxes is called Special, if it consists of at least 
three boxes and iff the difference between the number of balls in any 
two consecutive boxes is same.

A subset of boxes is called Special Subset,
if subset[i], subset[i+1], subset[i+2], ..., subset[j] is Special.

Your task is to findout the number of Special Subsets in the row of boxes.

Input Format:
-------------
Line-1 : An integer N, number of boxes.
Line-2 : N space separated integers balls[i], i-th box contains balls[i] balls. 

Output Format:
--------------
Print an integer, number of Special Subsets.


Sample Input:
---------------
4
1 2 3 4

Sample Output:
----------------
3

Explanation:
------------
Special Subsets are: 
[1,2,3], [2,3,4], [1,2,3,4].


Sample Input:
---------------
5
1 3 5 7 9

Sample Output:
----------------
6


Explanation:
------------
Special Subsets are: 
[1,3,5], [3,5,7], [5,7,9], [1,3,5,7], [3,5,7,9], [1,3,5,7,9].
def specialSubset(l):
    c,diff,prevc=0,0,0
    for i in range(n-1):
        if diff==0:
            diff=l[i+1]-l[i]
            continue
        if l[i+1]-l[i]==diff:
            prevc+=1
        else:
            c+=(prevc*(prevc+1))/2
            prevc=0
            diff=l[i+1]-l[i]
    c+=(prevc*(prevc+1))/2
    return int(c)

n=int(input())
l=list(map(int,input().split()))[:n]
print(specialSubset(l))