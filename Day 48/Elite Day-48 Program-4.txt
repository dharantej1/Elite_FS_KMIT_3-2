In a game, There are N boxes in a Queue.
Each box conatins few gold coins in it.

Yash and Dutt are playing the game.

Game rules are as follows:
	- Initially, Yash picks one of the box from either end of the Queue.
	- Then, Dutt picks one of the box from either end of the Queue.
	- Repeat the first and second steps until the Queue become empty. 
The person with the maximum amount of gold coins is the winner.

You are given N boxes of gold coins, coins[].
Your task is to find the name of the winner either Yash or Dutt. 

Input Format:
-------------
Line-1: An integer N
Line-2: N space separated integers coins[].

Output Format:
--------------
Print the name of the winner, Yash / Dutt


Sample Input-1:
---------------
3
2 6 3

Sample Output-1:
----------------
Dutt

Explanation: 
------------
Initially, Yash can choose between 2 and 3.
If he chooses 3 (or 2), then Dutt can choose from 2 (or 3) and 5. If player 2 chooses 5, then
Yash will be left with 2 (or 3).
So, final score of Yash is 3 + 2 = 5, and Dutt is 6.
Hence, Dutt is the winner.

Sample Input-2:
---------------
4
2 6 50 7

Sample Output-2:
----------------
Yash
// def Wins(coins):    
//     N = len(coins)
//     if N % 2 == 0:
//         return "Yash"
//     else:
//         dp = coins[:]
//         for i in range(1, N):
//             for j in range(N - i):
//                 dp[j] = max(coins[j] - dp[j + 1], coins[j + i] - dp[j])
//         if dp[0]>=0 == True:
//             return "Yash"
//         else:
//             return "Dutt"
// n=int(input())
// coins=list(map(int,input().split()))[:n]
// print(Wins(coins))

#include<bits/stdc++.h>
using namespace std;
int solve(vector<int> v,vector<vector<int>> dp,int i,int j){
    if(i>=v.size() || i>j || j<0) return 0;
    
    if(dp[i][j]!=-1) return dp[i][j];
    
    int a=v[i]+min(solve(v,dp,i+2,j),solve(v,dp,i+1,j-1));
    int b=v[j]+min(solve(v,dp,i+1,j-1),solve(v,dp,i,j-2));
    
    return dp[i][j]=max(a,b);
}
int main(){
    int n;
    cin>>n;
    vector<int> v(n);
    int sum=0;
    for(int i=0;i<n;i++){
        cin>>v[i];
        sum+=v[i];
    }
    vector<vector<int>> dp(n+1,vector<int>(n+1,-1));
    int ans=solve(v,dp,0,n-1);
    if(ans>sum-ans) cout<<"Yash";
    else cout<<"Dutt";
}