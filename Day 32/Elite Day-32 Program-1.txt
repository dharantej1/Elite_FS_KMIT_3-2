Bunny is playing with binary strings. He wants to break
a binary string B into 3 parts, of length atleast '1',
when we merge the 3 parts will result the string B.

Your task is to find the count the various forms to break 
the Binary String B into 3 parts, where each part should 
contain equal number of 1's.


Input Format:
-------------
A string S.

Output Format:
--------------
Print an integer, count the various forms to break.


Sample Input-1:
---------------
01010010

Sample Output-1:
----------------
6

Explanation:
------------
There are six forms to break S into 3 parts 
where each part contain the equal number of  1's.
01 | 01 | 0010
01 | 010 | 010
01 | 0100 | 10
010 | 1 | 0010
010 | 10 | 010
010 | 100 | 10


Sample Input-2:
---------------
010010

Sample Output-2:
----------------
0



#include<bits/stdc++.h>
using namespace std;
int variousforms(string s,int c){
    int substr1=0,substr2=0,count=0;
    for(int i=0;i<s.length();i++){
        if(s[i]=='1')
            count++;
        if(count==c){
            substr1++;
        }
        else if(count==2*c)
            substr2++;
    }
    return substr1*substr2;
}
int main(){
    string s;
    cin>>s;
    int c=count(s.begin(),s.end(),'1');
    if(c==0)
        cout<<(s.length()-1)*(s.length()-2)/2;
    else if(c<3)
        cout<<0<<endl;
    else
        cout<<variousforms(s,c/3)<<endl;;
}