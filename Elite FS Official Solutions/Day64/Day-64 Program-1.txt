/*
Problem Statement:
-----------------
Mr Febin is working with numbers.
He wants to find all the AD Numbers,
An AD Number is defined as follows:
	- All the adjacent digits in the given number N 
	should have an absolute difference of 1 only. 

You will be given two integers, start and end,
Your task is to find all the AD Numbers in ascending order
in the range of [start, end], where both are inclusive.

Constarint:
----------
0 <= start < end <2*10^9.

Input Format:
-------------
Two space separated intergers,  start and end.

Output Format:
--------------
Print a list of integers.


Sample Input-1:
---------------
0 15

Sample Output-1:
----------------
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12]


Sample Input-2:
---------------
25 65

Sample Output-2:
----------------
[32, 34, 43, 45, 54, 56, 65]

 
Test Cases:
----------
case =1
input =50 150
output =[54, 56, 65, 67, 76, 78, 87, 89, 98, 101, 121, 123]

case =2
input =500 1000
output =[543, 545, 565, 567, 654, 656, 676, 678, 765, 767, 787, 789, 876, 878, 898, 987, 989]

case =3
input =1000 3999
output =[1010, 1012, 1210, 1212, 1232, 1234, 2101, 2121, 2123, 2321, 2323, 2343, 2345, 3210, 3212, 3232, 3234, 3432, 3434, 3454, 3456]

case =4
input =10000 20000
output =[10101, 10121, 10123, 12101, 12121, 12123, 12321, 12323, 12343, 12345]

case =5
input =1000000 2000000
output =[1010101, 1010121, 1010123, 1012101, 1012121, 1012123, 1012321, 1012323, 1012343, 1012345, 1210101, 1210121, 1210123, 1212101, 1212121, 1212123, 1212321, 1212323, 1212343, 1212345, 1232101, 1232121, 1232123, 1232321, 1232323, 1232343, 1232345, 1234321, 1234323, 1234343, 1234345, 1234543, 1234545, 1234565, 1234567]

case =6
input =70000000 99999999
output =[76543210, 76543212, 76543232, 76543234, 76543432, 76543434, 76543454, 76543456, 76545432, 76545434, 76545454, 76545456, 76545654, 76545656, 76545676, 76545678, 76565432, 76565434, 76565454, 76565456, 76565654, 76565656, 76565676, 76565678, 76567654, 76567656, 76567676, 76567678, 76567876, 76567878, 76567898, 76765432, 76765434, 76765454, 76765456, 76765654, 76765656, 76765676, 76765678, 76767654, 76767656, 76767676, 76767678, 76767876, 76767878, 76767898, 76787654, 76787656, 76787676, 76787678, 76787876, 76787878, 76787898, 76789876, 76789878, 76789898, 78765432, 78765434, 78765454, 78765456, 78765654, 78765656, 78765676, 78765678, 78767654, 78767656, 78767676, 78767678, 78767876, 78767878, 78767898, 78787654, 78787656, 78787676, 78787678, 78787876, 78787878, 78787898, 78789876, 78789878, 78789898, 78987654, 78987656, 78987676, 78987678, 78987876, 78987878, 78987898, 78989876, 78989878, 78989898, 87654321, 87654323, 87654343, 87654345, 87654543, 87654545, 87654565, 87654567, 87656543, 87656545, 87656565, 87656567, 87656765, 87656767, 87656787, 87656789, 87676543, 87676545, 87676565, 87676567, 87676765, 87676767, 87676787, 87676789, 87678765, 87678767, 87678787, 87678789, 87678987, 87678989, 87876543, 87876545, 87876565, 87876567, 87876765, 87876767, 87876787, 87876789, 87878765, 87878767, 87878787, 87878789, 87878987, 87878989, 87898765, 87898767, 87898787, 87898789, 87898987, 87898989, 89876543, 89876545, 89876565, 89876567, 89876765, 89876767, 89876787, 89876789, 89878765, 89878767, 89878787, 89878789, 89878987, 89878989, 89898765, 89898767, 89898787, 89898789, 89898987, 89898989, 98765432, 98765434, 98765454, 98765456, 98765654, 98765656, 98765676, 98765678, 98767654, 98767656, 98767676, 98767678, 98767876, 98767878, 98767898, 98787654, 98787656, 98787676, 98787678, 98787876, 98787878, 98787898, 98789876, 98789878, 98789898, 98987654, 98987656, 98987676, 98987678, 98987876, 98987878, 98987898, 98989876, 98989878, 98989898]

case =7
input =1000 9999
output =[1010, 1012, 1210, 1212, 1232, 1234, 2101, 2121, 2123, 2321, 2323, 2343, 2345, 3210, 3212, 3232, 3234, 3432, 3434, 3454, 3456, 4321, 4323, 4343, 4345, 4543, 4545, 4565, 4567, 5432, 5434, 5454, 5456, 5654, 5656, 5676, 5678, 6543, 6545, 6565, 6567, 6765, 6767, 6787, 6789, 7654, 7656, 7676, 7678, 7876, 7878, 7898, 8765, 8767, 8787, 8789, 8987, 8989, 9876, 9878, 9898]

case =8
input =11111111 12345678
output =[12101010, 12101012, 12101210, 12101212, 12101232, 12101234, 12121010, 12121012, 12121210, 12121212, 12121232, 12121234, 12123210, 12123212, 12123232, 12123234, 12123432, 12123434, 12123454, 12123456, 12321010, 12321012, 12321210, 12321212, 12321232, 12321234, 12323210, 12323212, 12323232, 12323234, 12323432, 12323434, 12323454, 12323456, 12343210, 12343212, 12343232, 12343234, 12343432, 12343434, 12343454, 12343456, 12345432, 12345434, 12345454, 12345456, 12345654, 12345656, 12345676, 12345678]

*/

Solution:
--------
import java.util.*;
class Solution{
    public static int st,en;
    public static String s,e;
    public static ArrayList<Integer> a=new ArrayList<>();
    public static void df(int len,int num){
        if(len>e.length())return;
        
            if(num>=st && num<=en)a.add(num);
        
        
        int d=num%10;
            if((d-1)>=0){
                df(len+1,num*10+(d-1));
            }
            if(d+1<=9){
                df(len+1,num*10+(d+1));
            }
    }
    public static void main(String args[]){
        Scanner sc=new Scanner(System.in);
        s=sc.next();
        e=sc.next();
        st=Integer.parseInt(s);
        en=Integer.parseInt(e);
        for(int i=0;i<10;i++){
            df(1,i);
        }
        Collections.sort(a);
        for(int i:a)System.out.println(i);
    }
}