/*
A transitive law is "If a == b and b == c, then a == c"
Which also says "If a == b and b != c, then a != c"

You will be given a list of strings relations[], i.e, like p==q or p!=q.
Your task is to find out whether all the relations follow the transitive law or not.
If all of them followed return true, otherwise return false.

Input Format:
-------------
Space separated strnigs, list of relations

Output Format:
--------------
Print a boolean value, whether transitive law is obeyed or not.


Sample Input-1:
---------------
a==b c==d c!=e e==f

Sample Output-1:
----------------
true


Sample Input-2:
---------------
a==b b!=c c==a

Sample Output-2:
----------------
false


Sample Input-3:
---------------
a==b b==c c!=d d!=e f==g g!=d

Sample Output-3:
----------------
true


==== testcases ====
case =1
input =a==b c==d c!=e e==f
output =true

case =2
input =a==b b==c c!=d d!=e f==g g!=d
output =true

case =3
input =a==b b!=c c==a
output =false

case =4
input =a==b b==c g!=h k==m m==n m!=l l==h h==c c==g
output =false

case =5
input =a==b b==c g!=h k==m m==n m!=l l==h h==c p==q q!=r r==s s==t t==v v==c c==g
output =false

case =6
input =a==b b==c g!=h k==m m==n m!=l l==h h==c p==q q!=r r==s s==t t==v v==c c!=g
output =true

case =7
input =a==b b==c g!=h k==m m==n m!=l l==h h==c u==v v!=w w!=x x!=y y==z x==p m==q w==q p==q q!=r r==s s==t t==v v==c c!=g
output =false

case =8
input =a==b b==c g!=h k==m m==n m!=l l==h h==c u==v v!=w w!=x x!=y y==z x==p m==q p==q q!=r r==s s==t t==v v==c p!=w y!=q
output =true


*/
import java.util.*;

class EquationsPossible {
        int[] uf = new int[26];
    public boolean equationsPossible(String[] equations) {
        for (int i = 0; i < 26; ++i) uf[i] = i;
        for (String e : equations)
            if (e.charAt(1) == '=')
                uf[find(e.charAt(0) - 'a')] = find(e.charAt(3) - 'a');
        for (String e : equations)
            if (e.charAt(1) == '!' && find(e.charAt(0) - 'a') == find(e.charAt(3) - 'a'))
                return false;
        return true;
    }

    public int find(int x) {
        if (x != uf[x]) uf[x] = find(uf[x]);
        return uf[x];
    }
	
	public static void main(String args[])
	{
		Scanner sc=new Scanner(System.in);
		String[] sarr=sc.nextLine().split(" ");
		System.out.println(new EquationsPossible().equationsPossible(sarr));
	}
}