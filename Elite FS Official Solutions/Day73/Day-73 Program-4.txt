/*
Problem Statement:
-----------------
There are several bricks with numbers printed on them, ranging from -100 to 100.
They were all lined up in a row. Your task is to calculate the sum of 
the differences between the greatest and smallest values in each contiguous 
group of bricks in the line.

Input Format:
-------------
Single line space separated integers, the values from -100 to 100.

Output Format:
--------------
Print an integer result.


Sample Input-1:
---------------
3 8 3 4

Sample Output-1:
----------------
26

Explanation:
------------
The contiguous groups of bricks are as follows:
[3],[8],[3],[4], diff = greatest - smallest is 0.
[3,8], diff = 8 - 3 = 5
[8,3], diff = 8 - 3 = 5
[3,4], diff = 4 - 3 = 1
[3,8,3], diff = 8 - 3 = 5
[8,3,4], diff = 8 - 3 = 5
[3,8,3,4], diff = 8 - 3 = 0
So the sum of all diffs is 5+5+1+5+5+5 = 26.


Sample Input-2:
---------------
-2 0 -2 4 -2

Sample Output-2:
----------------
48

 
Test Cases:
----------
case =1
input =3 9 8 7 4 1 2
output =105

case =2
input =4 0 -2 -2 -3 3 -3 3 1 0
output =235

case =3
input =1 -2 4 4 5 0 0 -2 1 -3 -2 3 1 4 0 4 2 5 4 5
output =1167

case =4
input =-2 -3 3 -7 6 -3 -1 5 -6 -3 -9 0 3 4 0 -9 5 9 8 -8
output =2605

case =5
input =4 0 -1 7 -9 8 5 0 5 -8 5 -2 -5 7 4 -3 9 4 -4 4 4 -7 2 2 0 7 -1 5 -2 -8
output =6445

case =6
input =-8 -10 -6 6 3 5 1 -8 -1 -4 4 10 -10 -8 -7 -5 -7 4 -4 -8 -8 5 -10 -2 6 2 4 2 -7 -7
output =7094

case =7
input =48 1 8 -53 -67 14 76 26 13 2 -34 -53 -100 90 -88 -91 -79 -71 32 77 -68 0 20 75 80
output =46612

case =8
input =50 -68 48 -45 87 62 36 52 -6 40 -1 37 -28 -17 -100 65 -29 -40 71 23 -27 25 89 4 36 16 -58 27 -79 -97 -51 -10 -41 -86 -98 -88 -55 14 9 -66 35 -93 67 79 -83 -96 51 92 25 85
output =199181

*/

Solution:
--------
import java.util.*;

class Solution {
    public long subArrayRanges(int[] A) {
        long res = 0;
        for (int i = 0; i < A.length; i++) {
            int max = A[i], min = A[i];
            for (int j = i; j < A.length; j++) {
                max = Math.max(max, A[j]);
                min = Math.min(min, A[j]);
                res += max - min;
            }
        }
        return res;
    }
	public static void main(String args[]){
		Scanner sc=new Scanner(System.in);
		String nums[]=sc.nextLine().split(" ");
		int arr[]=new int[nums.length];
		for(int i=0;i<nums.length;i++)
			arr[i]=Integer.parseInt(nums[i]);
		System.out.println(new Solution().subArrayRanges(arr));
	}
}
