/*
Subodh is interested in playing with Strings,
For a given String 'S', Subodh applies some rules to find the value of 'S'.
The rules are as follows:
	- If it is a balanced () has value 1
	- XY has value X + Y , where X and Y are balanced () strings.
	- (Z) has score 2 * Z , where Z is a balanced parentheses string.
	
Find out the value of given String and print it.

Note: All the given strings are balanced

Input Format:
----------------
A String contains only '(', ')'


Output Format:
------------------
Print an integer as result.


Sample Input-1:
-------------------
()

Sample Output-1:
---------------------
1

Sample Input-2:
-------------------
(())

Sample Output-2:
---------------------
2

Sample Input-3:
-------------------
(()(()))

Sample Output-3:
---------------------
6



==== testcases ====
case =1
input =()()()()()()()()()()()()()
output =13

case =2
input =(()()(()()()())())()()()((()()(()()()())())()()())
output =75

case =3
input =((((((((((((((())))))((((((())))))))))))))))
output =49152

case =4
input =()()()()()(()()()()(()()()(()()()()()())()())())
output =83

case =5
input =(((((())))((()))((()))(()()()()()))((((())))))
output =136

case =6
input =()(()()(()(()(((((((()))))))()())())())())()()
output =1089

case =7
input =((((((((((((((((((())))))))))))))))))((((())))()))
output =262180

case =8
input =(()((())))((()(())(((((())))))))(((()(())((())))))
output =206


*/

import java.util.*;

class StringValue {
    public static int valueOfString(String S) {
        Stack<Integer> stack = new Stack<>();
        int cur = 0;
        for (char c : S.toCharArray()) {
            if (c == '(') {
                stack.push(cur);
                cur = 0;
            } else {
                cur = stack.pop() + Math.max(cur * 2, 1);
            }
        }
        return cur;
    }
	
	public static void main(String args[])
	{
		Scanner sc = new Scanner(System.in);
		String s=sc.next();
		System.out.println(valueOfString(s));
	}
}