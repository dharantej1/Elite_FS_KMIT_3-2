/*
Problem Statement:
-----------------
Chitti Naidu is a school kid, writing a series of numbers in a special way.

The series is looks like following: 
	- For example, starting number is 25
	- Next number in the series is, count of digit groups like "one 2 and one 5', written as 1215.
	- Next number in the series is, count of digit groups like "one 1, one 2, one 1 and one 5', 
	written as 11121115 and so on.

You will be given a string S (A number), an integer N, where S is the starting number of series, 
You need to find the N-th term in the series. 

Note: Each term of the series of integers will be represented as a string.

Input Format:
-------------
A String S and an integer N

Output Format:
--------------
Print the N-th term in the series starts with S.


Sample Input-1:
---------------
25 3

Sample Output-1:
----------------
11121115


Sample Input-2:
---------------
21 4

Sample Output-2:
----------------
312211

Explanation:
---------------
1st term, S = 12
2nd term is "one 2 one 1" -> "1211",
3rd term is "one 1, one 2, two 1's " -> "111221"
Finally 4th term is  "three one's, two 2's, one 1" -> "312211".

 
Test Cases:
----------
case =1
input =23 3
output =11121113

case =2
input =11 4
output =111221

case =3
input =123 10
output =13211321322113311213212322211231131122211311123113322113

case =4
input =232 7
output =311311222112311311123112111311222112

case =5
input =999 14
output =311311222113111221221113122112132113121113222112311311222113111231133221121113122113121113221112131221123113111231121123222119

case =6
input =1113 16
output =111312211312111322212321121113121112131112132112311321322112111312212321121113122112131112131221121321132132211231131122211331121321232221121113122113121122132112311321322112111312211312113221133211322112211213322113

case =7
input =9987 13
output =11131221131211132221232112111312111213322112111312211312111322212321121113121112133221193113112221131112311332111213122112311311123112112322211831131122211311123113321112131221123113111231121123222117

case =8
input =2345 21
output

*/

Solution:
--------
import java.util.*;

class  CountingSeries{
    public String countingSeries(String s, int n) {
	    	StringBuilder curr=new StringBuilder(s);
	    	StringBuilder prev;
	    	int count;
	    	char say;
	        for (int i=1;i<n;i++){
	        	prev=curr;
	 	        curr=new StringBuilder();       
	 	        count=1;
	 	        say=prev.charAt(0);
	 	        
	 	        for (int j=1,len=prev.length();j<len;j++){
	 	        	if (prev.charAt(j)!=say){
	 	        		curr.append(count).append(say);
	 	        		count=1;
	 	        		say=prev.charAt(j);
	 	        	}
	 	        	else count++;
	 	        }
	 	        curr.append(count).append(say);
	        }	       	        
	        return curr.toString();
        
    }
	public static void main(String args[] ) {
		Scanner sc = new Scanner(System.in);
		String s=sc.next();
		int n=sc.nextInt();
		System.out.println(new CountingSeries().countingSeries(s,n));
	} 	
}