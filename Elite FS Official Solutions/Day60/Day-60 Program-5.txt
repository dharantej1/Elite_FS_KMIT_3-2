/*
Problem Statement:
-----------------
Mr Gnanesh is working with inteegrs,
He is given a list of N tokens, the tokens are printed a number on it.
You are given the list of numbers printed on Tokens as a list[] of size N.
You need to help Mr Gnanesh, to find the top F frequent numbers printed 
on tokens.

Note: If the frequency of two tokens is same, pick the numbers in sorted order(Asc).

Input Format:
----------------
Line-1 -> Two Integers, N and F
Line-2 -> N space separated integers, list[]

Output Format:
------------------
Print a list of integers of size F, top F frequent elements.


Sample Input-1:
---------------
8 3
2 1 2 1 3 2 1 4

Sample Output-1:
----------------
[1, 2, 3]

Explanation: 
------------
2 occurs 3 times, 1 occurs 3 times, 3 occurs 1 time, 4 occurs 1 time.
So the top 3 tokens are 1,2,3.


Sample Input-2:
---------------
10 3
1 4 2 4 2 2 3 4 1 3

Sample Output-2:
----------------
[2, 4, 1]


Test Cases:
----------
case =1
input =8 3
2 1 2 1 3 2 1 4
output =[1, 2, 3]

case =2
input =10 3
1 4 2 4 2 2 3 4 1 3
output =[2, 4, 1]

case =3
input =15 5
5 25 15 13 24 10 11 11 24 10 22 5 1 22 18
output =[5, 10, 11, 22, 24]

case =4
input =20 6
4 6 7 6 7 8 10 6 1 3 4 5 6 9 4 3 8 5 1 9
output =[6, 4, 1, 3, 5, 7]

case =5
input =25 5
93 104 110 104 103 91 99 90 97 109 95 93 98 108 95 110 96 105 108 100 103 104 90 100 96
output =[104, 90, 93, 95, 96]

case =6
input =50 15
215 217 219 210 211 217 215 213 213 201 204 211 207 213 210 210 219 212 214 208 208 213 209 202 210 200 213 215 213 209 214 208 208 211 214 204 216 219 211 211 211 218 203 200 212 209 212 209 213 211
output =[211, 213, 208, 209, 210, 212, 214, 215, 219, 200, 204, 217, 201, 202, 203]

case =7
input =15 3
15 13 11 14 10 13 15 10 10 10 11 15 14 13 12
output =[10, 13, 15]

case =8
input =100 6
16 12 18 20 20 20 12 19 16 15 14 16 10 10 11 16 19 11 18 20 19 18 17 18 19 15 13 20 11 17 19 11 13 20 12 10 16 19 12 16 17 16 10 18 16 12 20 17 15 13 17 12 15 18 19 20 13 12 14 10 17 13 16 16 14 20 18 13 15 14 20 11 15 10 17 15 10 11 17 19 15 17 15 11 14 18 10 11 14 14 19 14 14 17 20 13 13 13 16 14
output =[16, 20, 14, 17, 13, 15]

*/

Solution:
--------
import java.util.*;
import java.util.Map;
import java.util.Map.Entry;
class KFrequentItems {
    public List<Integer> topKFrequent(int[] nums, int k) {
       Map<Integer, Integer> map = new HashMap<>();
    for (int i = 0; i < nums.length; i ++) {
      if (map.containsKey(nums[i])) {
        map.put(nums[i], map.get(nums[i]) + 1);
      } else {
        map.put(nums[i], 1);
      }
    }
    List<Integer> list = map.entrySet().stream()
        .sorted((item1, item2) -> item2.getValue() - item1.getValue())
        .mapToInt(Entry::getKey)
        .limit(k)
        .collect(ArrayList::new, ArrayList::add, ArrayList::addAll);
    return list;
    }
	
	public static void main(String args[]){
		Scanner sc=new Scanner(System.in);
		int n=sc.nextInt();
		int k=sc.nextInt();
		int arr[]=new int[n];
		for(int i=0;i<n;i++)
			arr[i]=sc.nextInt();
		System.out.println(new KFrequentItems().topKFrequent(arr,k));
	}
}