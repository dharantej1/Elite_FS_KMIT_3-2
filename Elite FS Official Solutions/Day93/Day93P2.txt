/*
Consider a pair of integers, (a,b). The following operations can be performed 
on (a,b) in any order, zero or more times:
	- (a,b) -> ( a+b, b )
	- (a,b) -> ( a, a+b )

For example, starting with (1,1), perform the operation (1, 1+1) to get (1,2), 
perform the operation (1+2, 2) to get (3,2), and perform the operation (5,2). 
Alternatively the first operation could be (1+1, 1) to et (2,1) and so on.

Your task is to build a function must return a string that denotes whether you 
can convert (a,b) to (c,d) by performing zero or more operations specified 
above? or not. 

If it is possible, return true, otherwise false.

NOTE: 
1<= a,b,c,d <= 1000

Input Format:
-------------
Line-1: Two space separated integers, a,b
Line-2: Two space separated integers, c,d

Output Format:
--------------
Return a boolean value.


Sample Input-1:
---------------
1 2
5 4

Sample Output-1:
----------------
true


Sample Input-2:
---------------
2 3
10 7

Sample Output-2:
----------------
false


==== testcases ====
case =1
input =1 2
5 4
output =true

case =2
input =2 3
10 7
output =false

case =3
input =2 3
9 7
output =true

case =4
input =2 10
26 12
output =true

case =5
input =20 6
6 12
output =false

case =6
input =3 9
87 54
output =true

case =7
input =9 3
87 54
output =false

case =8
input =5 10
80 120
output =false

*/

import java.util.*;

class IsReachable {
	
	static boolean isReachable(int sx, int sy,
								int dx, int dy)
	{
		
		// base case
		if (sx > dx || sy > dy)
			return false;
	
		// current point is equal to destination
		if (sx == dx && sy == dy)
			return true;
	
		// check for other 2 possibilities
		return (isReachable(sx + sy, sy, dx, dy) ||
				isReachable(sx, sy + sx, dx, dy));
	}
	

	public static void main(String arg[])
	{
		int source_x = 2, source_y = 10;
		int dest_x = 26, dest_y = 12;
		if (isReachable(source_x, source_y, dest_x,
										dest_y))
			System.out.print("True\n");
		else
			System.out.print("False\n");
	}
}