/*
Problem Statement:
-----------------
Given a sorted list of integers E[], and two integers  L and U
Where L <= E[i]  <= U.

Your task is to find the ranges, which are not present in the given list
and print all the ranges

For example:
Given list is [ 1, 2, 4, 51, 52, 53, 92, 93, 94, 95 ] and L=1 U=100: 
The ranges which are not present are [3, 5->50, 54->91, 96->100]

Note: List E contain no duplicates.

Input Format:
-------------
Line-1 -> Space separated integers in sorted order

Output Format:
--------------
Print the list of ranges.


Sample Input-1:
---------------
0 1 2 3 4 5 8 9 10
0 20

Sample Output-1:
----------------
[6->7, 11->20]


Sample Input-2:
---------------
1 2 4 51 52 53 92 93 94 95
1 100

Sample Output-2:
----------------
[3, 5->50, 54->91, 96->100]
 


Test Cases:
----------
case =1
input =0 1 2 3 4 5 8 9 10
0 20
output =[6->7, 11->20]

case =2
input =1 2 4 51 52 53 92 93 94 95
1 100
output =[3, 5->50, 54->91, 96->100]

case =3
input =0 1 3 50 75
0 99
output =[2, 4->49, 51->74, 76->99]

case =4
input =1 2 3 5 78 90 123 445 567 568 569 571
0 600
output =[0, 4, 6->77, 79->89, 91->122, 124->444, 446->566, 570, 572->600]

case =5
input =1 2 3 5 78 90 91 95 96 98 99 123 124 125 567 568 569
1 575
output =[4, 6->77, 79->89, 92->94, 97, 100->122, 126->566, 570->575]

case =6
input =2 3 4 5 6 8 9 10 11 19 20 21 22 23 42 43 44 45 50 51 52 55 57 101 102 105 106 107 108 120 132 133 134 135 136 141 145 146 147
1 150
output =[1, 7, 12->18, 24->41, 46->49, 53->54, 56, 58->100, 103->104, 109->119, 121->131, 137->140, 142->144, 148->150]

case =7
input =2 3 4 5 6 8 9 10 11 19 20 21 22 23 42 43 44 45 50 51 52 55 57
0 60
output =[0->1, 7, 12->18, 24->41, 46->49, 53->54, 56, 58->60]

case =8
input =2 3 4 5 6 8 9 10 11 19 20 21 22 23 42 43 44 45 50 51 52 55 57 101 102 105 106 107 108 120 132 133 134 135 136 141 145 146 147 256 257 258 291 292 293 304 305 306 307 308 309 390 391
0 399
output =[0->1, 7, 12->18, 24->41, 46->49, 53->54, 56, 58->100, 103->104, 109->119, 121->131, 137->140, 142->144, 148->255, 259->290, 294->303, 310->389, 392->399]

*/

Solution:
--------
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.*;
public class MissingRange {
	public static List<String> findMissingRanges(int[] a, int lo, int hi) {
		  List<String> res = new ArrayList<String>();
		  
		  // the next number we need to find
		  int next = lo;
		  
		  for (int i = 0; i < a.length; i++) {
		    // not within the range yet
		    if (a[i] < next) continue;
		    
		    // continue to find the next one
		    if (a[i] == next) {
		      next++;
		      continue;
		    }
		    
		    // get the missing range string format
		    res.add(getRange(next, a[i] - 1));
		    
		    // now we need to find the next number
		    next = a[i] + 1;
		  }
		  
		  // do a final check
		  if (next <= hi) res.add(getRange(next, hi));

		  return res;
		}

	static String getRange(int n1, int n2) {
		return (n1 == n2) ? String.valueOf(n1) : String.format("%d->%d", n1, n2);
	}
	public static void main(String args[] ) throws IOException {

		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

		String str = br.readLine();
		String[] numbers = str.split(" ");
		int[] arr = Arrays.asList(numbers).stream().mapToInt(Integer::parseInt).toArray();
		str = br.readLine();
		String[] rangeline = str.split(" ");
		int[] range = Arrays.asList(rangeline).stream().mapToInt(Integer::parseInt).toArray();
		
		System.out.println(findMissingRanges(arr,range[0],range[1]));
	}
}