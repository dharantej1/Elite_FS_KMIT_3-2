/*
Problem Statement:
-----------------
Anup is interested in Word Play, He invented a new game on words
Anup will give you a string S and index P (1-indexed).
You need apply the rules of the game on that string  
and find out the character at a given index P.

Rules are as follows:
1. You have to read one character at a time and keep appending as a word 
   until you find a digit(d).
2. Once you find a digit, the entire word is repeatedly appended d-1 more 
   times in total.

Input Format:
----------------
Line-1 -> A String S
Line-2 -> An integer P, index value.

Output Format:
------------------
Print the result as a String.


Sample Input-1:
-------------------
kmit2ngit3
12

Sample Output-1:
---------------------
t

Explanation-1:
----------------
The resultant string is "kmitkmitngitkmitkmitngitkmitkmitngit".
The 12th character in the string is "t".

Sample Input-2:
-------------------
ab3c4
9

Sample Output-2:
---------------------
b

Explanation-2:
----------------
The resultant string is "abababcabababcabababcabababc"
The 9th character in the string is "b".

 
Test Cases:
----------
case =1
input =kmit2ngit3
12
output =t

case =2
input =ab3c4
9
output =b

case =3
input =a1b2c3d4e5
112
output =c

case =4
input =avnr2prr3ng4kmit5
257
output =r

case =5
input =decode4at3index5problem7
517
output =e

case =6
input =bilahari1chander2gnanesh3venky4sudha5shanmukh6
1034
output =r

case =7
input =abcd5efghi4klmnop3
315
output =m

case =8
input =can3you3solve5the3problem7now3avnr2prr3ng4kmit5bilahari1chander2gnanesh3venky4sudha5shanmukh6
6782566
output =t

*/

Solution:
--------
import java.util.*;

class Solution {
    public String decodeAtIndex(String S, int K) {
        int i;
        long N = 0;
        for (i = 0; N < K; i++) {
            N = Character.isDigit(S.charAt(i)) ? N * (S.charAt(i) - '0') : N + 1;
        }
        for (i--; i > 0; i--) {
            if (Character.isDigit(S.charAt(i))) {
                N /= S.charAt(i) - '0';
                K %= N;
            }
            else {
                if (K % N == 0) {
                    break;
                }
                N--;
            }
        }
        return Character.toString(S.charAt(i));
    }
	public static void main(String args[] ) {
		Scanner scan = new Scanner(System.in);
		String S=scan.next();
		int k=scan.nextInt();
		System.out.println(new Solution().decodeAtIndex(S,k));
	}
}