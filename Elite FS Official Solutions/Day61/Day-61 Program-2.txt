/*
Problem Statement:
-----------------
In recent times, lot of people are effecting with Covid, the need of oxygen
cylinders is high. There is a need, of K oxygen cylinders. The need of oxygen 
by the coivd patient may vary from patient to patient.

There are 'N' number of patients with the given need of oxygen as need[], 
where 'i'th patient need is need[i].
and each Oxygen cylinder can handle maximum need 'S'. 
Each cylinder can serve at most two covid patients at same time, the sum
of needs of those patients should be <= 'S'.

Find out the minimum number of cylinders 'K' required to serve all 
the covid effected patients.

Note: It is guaranteed that an oxygen cylinder can serve one covid patient
of any amount of need of oxygen.

Input Format:
-------------
Line-1 -> Two Integers, N and S
Line-2 -> N space separated integers, need[]

Output Format:
--------------
Print an integer as result.


Sample Input-1:
---------------
4 3
3 2 2 1

Sample Output-1:
----------------
3

Explanation: 
------------
3 cylinders required (1, 2), (2) and (3).


Sample Input-2:
---------------
4 5
3 5 3 3

Sample Output-2:
----------------
4

Explanation: 
------------
4 cylinders required (3), (3), (4), (5)


Test Cases:
----------
case =1
input =4 3
3 2 2 1
output =3

case =2
input =4 5
3 5 4 3
output =4

case =3
input =2 3
1 2
output =1

case =4
input =10 6
9 7 5 1 3 6 2 8 7 2
output =8

case =5
input =20 15
18 2 5 5 18 17 14 2 12 2 8 6 13 8 8 12 7 13 6 2
output =12

case =6
input =30 15
15 20 18 20 18 17 15 4 9 7 4 1 1 15 9 15 16 1 11 5 5 1 7 10 1 9 18 3 10 13
output =21

case =7
input =25 30
25 8 1 11 28 18 15 7 7 2 19 22 20 13 27 10 8 23 30 29 22 6 9 6 20
output =14

case =8
input =30 40
26 14 29 22 27 11 17 12 18 13 12 24 16 20 30 19 26 29 19 30 12 26 18 30 27 30 24 19 13 26
output =18


*/

Solution:
--------
import java.util.*;
class Solution {
    public static void main(String args[]) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int s = sc.nextInt();
        int arr[] = new int[n];
        for(int i=0;i<n;i++) arr[i]=sc.nextInt();
        Arrays.sort(arr);
        int cnt=0;
        int i=0,j=n-1;
        while(i<=j) {
            if(arr[i]+arr[j]<=s) {
                i++;
                j--;
            }
            else j--;
            cnt++;
        }
        System.out.print(cnt);
    }
}